{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_components/add-project/add-project.component.css","webpack:///./src/app/_components/add-project/add-project.component.html","webpack:///./src/app/_components/add-project/add-project.component.ts","webpack:///./src/app/_components/add-task/add-task.component.css","webpack:///./src/app/_components/add-task/add-task.component.html","webpack:///./src/app/_components/add-task/add-task.component.ts","webpack:///./src/app/_components/add-user/add-user.component.css","webpack:///./src/app/_components/add-user/add-user.component.html","webpack:///./src/app/_components/add-user/add-user.component.ts","webpack:///./src/app/_components/nav/nav.component.css","webpack:///./src/app/_components/nav/nav.component.html","webpack:///./src/app/_components/nav/nav.component.ts","webpack:///./src/app/_components/view-task/view-task.component.css","webpack:///./src/app/_components/view-task/view-task.component.html","webpack:///./src/app/_components/view-task/view-task.component.ts","webpack:///./src/app/_services/project.service.ts","webpack:///./src/app/_services/task.service.ts","webpack:///./src/app/_services/user.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL19jb21wb25lbnRzL2FkZC1wcm9qZWN0L2FkZC1wcm9qZWN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div>\\n   <form #projectForm=\\\"ngForm\\\" (ngSubmit)=\\\"submit(projectForm)\\\">\\n   <div >\\n      <div class=\\\"panel panel-primary\\\">\\n         <div class=\\\"panel-heading\\\">Add Project</div>\\n         <div class=\\\"panel-body\\\">\\n            <table>\\n               <tr>\\n                  <td><label for=\\\"txtuserFName\\\" class=\\\"control-label\\\">Project: &nbsp;&nbsp;&nbsp;</label></td>\\n                  <td colspan=\\\"4\\\">\\n                     <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"txtuserFName\\\" name=\\\"ProjectName\\\" [(ngModel)]=\\\"projectData.ProjectName\\\" #userFName=\\\"ngModel\\\"\\n                     required>\\n                  </td>\\n               </tr>\\n               <br/>\\n               <tr>\\n                  <td></td>\\n                  <td>\\n                     <input type=\\\"checkbox\\\" name=\\\"date\\\" value=\\\"1\\\" checked=\\\"checked\\\"> Set Start & End date &nbsp;&nbsp;\\n                  </td>\\n                  <td>\\n                     <input required class=\\\"form-control\\\" type=\\\"date\\\" value=\\\"\\\" id=\\\"example-date-input\\\" #StartDate=\\\"ngModel\\\" name=\\\"StartDate\\\" [(ngModel)]=\\\"projectData.StartDate\\\">\\n                  </td>\\n                  <td>\\n                     &nbsp;&nbsp;\\n                  </td>\\n                  <td>\\n                     <input required class=\\\"form-control\\\" type=\\\"date\\\" value=\\\"\\\" id=\\\"example-date-input\\\" #EndDate=\\\"ngModel\\\" name=\\\"EndDate\\\" [(ngModel)]=\\\"projectData.EndDate\\\">\\n                  </td>\\n               </tr>\\n               <tr>\\n                  <td>\\n                  </td>\\n                  <td colspan=\\\"4\\\">0\\n                  </td>\\n                  <td>\\n                     30\\n                  </td>\\n               </tr>\\n               <tr>\\n                  <td> <label for=\\\"txtlblPriorityName\\\" class=\\\"control-label\\\">Priority:{{taskPriority.value}}</label></td>\\n                  <td colspan=\\\"4\\\">\\n                     <input required type=\\\"range\\\" class=\\\"form-control\\\" id=\\\"txtPrioritySlider\\\" name=\\\"Priority\\\" min=\\\"0\\\" max=\\\"50\\\" #taskPriority=\\\"ngModel\\\"\\n                     [(ngModel)]=\\\"projectData.Priority\\\" required>\\n                  </td>\\n               </tr>\\n               <br/>\\n               <tr>\\n                  <label for=\\\"lblParentTsk\\\" class=\\\"control-label\\\">Manager:&nbsp;&nbsp; </label>\\n                  <td colspan=\\\"3\\\">\\n                      <select name=\\\"UserID\\\" id=\\\"ddlParentTask\\\" class=\\\"form-control\\\" #ddltaskId=\\\"ngModel\\\" [(ngModel)]=\\\"projectData.UserID\\\">\\n              <option [ngValue]=\\\"null\\\">select</option>\\n               <option *ngFor=\\\"let item of users\\\" [value]=\\\"item.UserID\\\" [selected]=\\\"projectData.UserID\\\" >{{item.FirstName}}</option>\\n              </select>\\n                  </td>\\n               </tr>\\n               <br/>\\n               <tr>\\n                 <td></td>               \\n                  <td> <button class=\\\"btn btn-md btn-primary\\\" >{{FormRequestType}} Project</button> &nbsp; </td>\\n                  <td> <button type=\\\"reset\\\" class=\\\"btn btn-success\\\">Reset</button></td>\\n               </tr>\\n            </table>\\n         </div>\\n      </div>\\n   </div>\\n   </form>\\n   <table class=\\\"table table-striped table-hover table-bordered\\\">\\n      <thead>\\n         <tr>\\n            <th (click)=\\\"sort('name')\\\">Project\\n         <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='name'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span></th>\\n          <th (click)=\\\"sort('name')\\\">No of Tasks\\n         <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='name'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span></th>\\n          <th (click)=\\\"sort('name')\\\">Start Date\\n         <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='name'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span></th>\\n          <th (click)=\\\"sort('name')\\\">End Date\\n         <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='name'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span></th>\\n          <th (click)=\\\"sort('name')\\\">Completed\\n         <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='name'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span></th>\\n          <th (click)=\\\"sort('name')\\\">Priority\\n         <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='name'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span></th>\\n            <td colspan=\\\"2\\\"><b>\\n               <th colspan=\\\"2\\\"><b>\\n            Search Project:\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"ProjectName\\\"  style=\\\"box-sizing:border-box;display:block;width:100%;background-color: lightgrey\\\">\\n            </b></th></b></td>\\n         </tr>\\n      </thead>\\n      <tbody>\\n         <tr *ngFor=\\\"let proj of projects \\\">\\n            <td>{{proj.ProjectName}}</td>\\n            <td>1</td>\\n            <td>{{proj.StartDate | date:'dd/MM/yyyy'}}</td>\\n            <td>{{proj.EndDate | date:'dd/MM/yyyy'}}</td>\\n            <td>No</td>\\n             <td>{{proj.Priority}}</td>\\n            <td colspan=\\\"2\\\">\\n               <button class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"edit(proj.ProjectID)\\\">\\n               <span class=\\\"glyphicon glyphicon-pencil\\\">&nbsp;Edit</span>\\n               </button> &nbsp;&nbsp;&nbsp;\\n               <button class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"delete(proj.ProjectID)\\\">\\n               <span class=\\\"glyphicon glyphicon-trash\\\">&nbsp;Suspend</span>\\n               </button>\\n            </td>\\n         </tr>\\n      </tbody>\\n   </table>\\n \\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ProjectService } from './../../_services/project.service';\nimport { TaskService } from './../../_services/task.service';\nimport { UserService } from './../../_services/user.service';\nimport { FormGroup } from '@angular/forms';\nimport { formatDate } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { TestBed } from '@angular/core/testing';\nimport { ViewTaskComponent } from '../../_components/view-task/view-task.component'\nimport { TaskData } from './../../_models/task-data.model';\nimport { ProjectData } from './../../_models/project-data.model';\nimport { UserData } from './../../_models/user-data.model';\nimport { DatePipe } from '@angular/common';\nimport { map, filter, scan } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-add-project',\n  templateUrl: './add-project.component.html',\n  styleUrls: ['./add-project.component.css']\n})\nexport class AddProjectComponent implements OnInit {\n  \n  // User Data\n key: string = 'name'; //set default\n reverse: boolean = false;\n   userData: UserData = {FirstName:'',UserID: null,LastName:'',EmployeeID:'' }\nusers: UserData[];\n  //\n  sort(key){\n    this.key = key;\n    this.reverse = !this.reverse;\n  }\n\n  updateprojreq: ProjectData;\n  projects: ProjectData[];\n  isEdit: boolean;\n  projectId: number;\n  projectData: ProjectData = {     ProjectID: null,\n    UserID: null,\n    TaskID: null,\n    ProjectName:  '',\n    StartDate: '',\n    EndDate: '',\n     Priority: null}\n  FormRequestType: string=\"\";\n\n  constructor(private datePipe: DatePipe,private projectService: ProjectService,private userService: UserService, private router: Router) { }\n\n  \n  ngOnInit() {\n    this.FormRequestType=\"Add\";\n    this.projectService.getProjects()\n      .subscribe(response => {\n        this.projects = response;\n        console.log( this.projects)\n      })\n this.userService.getUsers()\n      .subscribe(\n        (userresponse: UserData[]) => {\n          this.users = userresponse;\n           console.log(\"users response in consolee\");\n           console.log(this.users);\n        }\n      );\n      \n      \n  }\n\n  submit(form: FormGroup) {\n    const request = form.value;\n\n    if (!this.isEdit) {\n      this.projectService.addProject(request)\n        .subscribe(response => {\n          this.projects.push(response);\n        }, error => {\n          for (const key of Object.keys(error.error.ModelState)) {\n            for (const err of error.error.ModelState[key]) {\n              alert(err);\n            }\n          }\n        }, () => {\n          form.reset();\n         \n        })\n    } else {\n     \n     this.updateprojreq=request;\n     this.updateprojreq.ProjectID=this.projectId;\n\n       console.log(\"Inside update\");\n       console.log(this.updateprojreq);\n      this.projectService.updateProject(this.projectId, this.updateprojreq)\n        /* working\n        .subscribe(project => {\n          var projIndex = this.projects.findIndex(proj => proj.UserID == this.projectId);\n          console.log(\"projIndex\");\n          console.log(projIndex);\n\n          if (projIndex != -1) {\n           this.projectService.getUsers()\n      .subscribe(response => {\n        this.projects = response;\n        console.log( this.projects)\n      })\n          }\n          */\n          .subscribe(project => {\n           this.projectService.getProjects()\n      .subscribe(response => {\n        this.projects = response;\n         console.log( this.projects)\n           this.FormRequestType=\"Submit\";\n      })\n          }\n        , error => {\n          for (const key of Object.keys(error.error.ModelState)) {\n            for (const err of error.error.ModelState[key]) {\n              alert(err);\n            }\n          }\n        }, () => {\n          form.reset();\n          this.isEdit = false;\n        })\n    }\n  }\n\n  delete(id: number) {\n    let isDelete = confirm('Do you wish to delete the Project?')\n    if (isDelete) {\n      this.projectService.deleteProject(id)\n        .subscribe(response => {\n          if (response) {\n            const projIndex = this.projects.findIndex(proj => proj.UserID == id);\n            if (projIndex != -1) {\n              this.projects.splice(projIndex, 1);\n            }\n          }\n        });\n    }\n  }\n\n  edit(id: number) {\n    console.log(\"id\")\n    console.log(id)\n     this.FormRequestType=\"Update\";\n    console.log(\"edit id\")\n     console.log(id)\n    this.projectService.getProject(id)\n      .subscribe(project => {\n        console.log(project)\n        this.projectData.ProjectName = project.ProjectName; \n        this.projectData.Priority = project.Priority;\n          this.projectData.StartDate = this.datePipe.transform(project.StartDate, \"yyyy-MM-dd\");\n          this.projectData.EndDate = this.datePipe.transform(project.EndDate, \"yyyy-MM-dd\");\n          this.projectData.UserID= project.UserID;\n         this.isEdit = true;\n        this.projectId = id;\n      })\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL19jb21wb25lbnRzL2FkZC10YXNrL2FkZC10YXNrLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div>\\n  <form #taskForm=\\\"ngForm\\\" (ngSubmit)=\\\"submit(taskForm)\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading\\\">{{FormRequestType}} Task</div>\\n        <div class=\\\"panel-body\\\">\\n\\n          <div class=\\\"form-group\\\" [class.has-error]=\\\"TXTtaskName.touched && TXTtaskName.invalid\\\">\\n            <label for=\\\"lblTaskName\\\" class=\\\"control-label\\\">Task:</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"tasName\\\" name=\\\"TaskName\\\" [(ngModel)]=\\\"task.TaskName\\\" #TXTtaskName=\\\"ngModel\\\" required>\\n            <div *ngIf=\\\"TXTtaskName.touched && TXTtaskName.invalid\\\">\\n              <span class=\\\"error\\\" *ngIf=\\\"TXTtaskName.errors?.required\\\">Name is required</span>\\n            </div>\\n          </div>\\n          <!-- priority Slider -->\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"txtlblPriorityName\\\" class=\\\"control-label\\\">Priority:{{taskPriority.value}}</label>\\n            <input required type=\\\"range\\\" class=\\\"form-control\\\" id=\\\"txtPrioritySlider\\\" name=\\\"Priority\\\" min=\\\"0\\\" max=\\\"50\\\" #taskPriority=\\\"ngModel\\\"\\n              [(ngModel)]=\\\"task.Priority\\\" required>\\n              <p>0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;50</p>\\n              <div *ngIf=\\\"taskPriority.touched && taskPriority.invalid\\\">\\n                <span class=\\\"error1\\\" *ngIf=\\\"taskPriority.errors?.required\\\">Range is required</span>\\n              </div>\\n          </div>\\n          <!-- Parent Task -->\\n          <div class=\\\"form-group\\\" [class.has-error]=\\\"ddltaskId.touched && ddltaskId.invalid\\\">\\n            <label for=\\\"lblParentTsk\\\" class=\\\"control-label\\\">Parent Task: </label>\\n            <!--<select name=\\\"ParentID\\\" id=\\\"ddlParentTask\\\" class=\\\"form-control\\\" #ddltaskId=\\\"ngModel\\\" [(ngModel)]=\\\"ddltaskId.TaskID\\\" required>-->\\n            <select name=\\\"ParentID\\\" id=\\\"ddlParentTask\\\" class=\\\"form-control\\\" #ddltaskId=\\\"ngModel\\\" [(ngModel)]=\\\"task.ParentID\\\">\\n              <option [ngValue]=\\\"null\\\">select</option>\\n               <option *ngFor=\\\"let item of tasks\\\" [value]=\\\"item.TaskID\\\" [selected]=\\\"task.ParentID\\\" >{{item.TaskName}}</option>\\n              </select>\\n\\n          </div>\\n\\n          <!-- Start Date -->\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"txtlblStartDateName\\\" class=\\\"control-label\\\">Start Date:</label>\\n            <input required class=\\\"form-control\\\" type=\\\"date\\\" value=\\\"\\\" id=\\\"example-date-input\\\" #StartDate=\\\"ngModel\\\" name=\\\"StartDate\\\" [(ngModel)]=\\\"task.StartDate\\\">\\n            <div *ngIf=\\\"StartDate.touched && StartDate.invalid\\\">\\n              <span class=\\\"error\\\" *ngIf=\\\"StartDate.errors?.required\\\">Please select start date</span>\\n            </div>\\n          </div>\\n          <!--  -->\\n\\n          <!-- End Date -->\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"txtlblEndDateName\\\" class=\\\"control-label\\\">End Date:</label>\\n            <input required class=\\\"form-control\\\" type=\\\"date\\\" value=\\\"\\\" id=\\\"example-date-input\\\" name=\\\"EndDate\\\" #EndDate=\\\"ngModel\\\" [(ngModel)]=\\\"task.EndDate\\\">\\n            <div *ngIf=\\\"EndDate.touched && EndDate.invalid\\\">\\n              <span class=\\\"error\\\" *ngIf=\\\"EndDate.errors?.required\\\">Please select a End Date</span>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\" [class.has-error]=\\\"ddltaskId.touched && ddltaskId.invalid\\\">\\n            <label for=\\\"lblParentTsk\\\" class=\\\"control-label\\\">Add User: </label>\\n            <!--<select name=\\\"ParentID\\\" id=\\\"ddlParentTask\\\" class=\\\"form-control\\\" #ddltaskId=\\\"ngModel\\\" [(ngModel)]=\\\"ddltaskId.TaskID\\\" required>-->\\n            <select name=\\\"UserID\\\" id=\\\"ddlParentTask\\\" class=\\\"form-control\\\" #ddltaskId=\\\"ngModel\\\" [(ngModel)]=\\\"userData.UserID\\\">\\n              <option [ngValue]=\\\"null\\\">select</option>\\n               <option *ngFor=\\\"let item of users\\\" [value]=\\\"item.UserID\\\" [selected]=\\\"task.UserID\\\" >{{item.FirstName}}</option>\\n              </select>\\n          </div>\\n\\n          <div class=\\\"form-group\\\" [class.has-error]=\\\"ddltaskId.touched && ddltaskId.invalid\\\">\\n            <label for=\\\"lblProjectTsk\\\" class=\\\"control-label\\\">Add Project: </label>\\n            <!--<select name=\\\"ParentID\\\" id=\\\"ddlParentTask\\\" class=\\\"form-control\\\" #ddltaskId=\\\"ngModel\\\" [(ngModel)]=\\\"ddltaskId.TaskID\\\" required>-->\\n            <select name=\\\"ProjectID\\\" id=\\\"ddlParentTask\\\" class=\\\"form-control\\\" #ddltaskId=\\\"ngModel\\\" [(ngModel)]=\\\"projectData.ProjectID\\\">\\n              <option [ngValue]=\\\"null\\\">select</option>\\n               <option *ngFor=\\\"let item of projects\\\" [value]=\\\"item.ProjectID\\\" [selected]=\\\"task.ProjectID\\\" >{{item.ProjectName}}</option>\\n              </select>\\n          </div>\\n\\n          \\n\\n        </div>\\n        <div class=\\\"panel-footer\\\">\\n          <div class=\\\"pull-right\\\">\\n            <button class=\\\"btn btn-md btn-primary\\\" [disabled]=\\\"taskForm.invalid\\\">{{FormRequestType}}</button> &nbsp;\\n            <button type=\\\"reset\\\" class=\\\"btn btn-success\\\">Reset</button>\\n          </div>\\n          <div class=\\\"clearfix\\\"></div>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ProjectService } from './../../_services/project.service';\nimport { UserService } from './../../_services/user.service';\nimport { TaskService } from './../../_services/task.service';\nimport { FormGroup } from '@angular/forms';\nimport { formatDate } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { TestBed } from '@angular/core/testing';\nimport { ViewTaskComponent } from '../../_components/view-task/view-task.component'\nimport { TaskData } from './../../_models/task-data.model';\nimport { UserData } from './../../_models/user-data.model';\nimport { ProjectData } from './../../_models/project-data.model';\nimport { DatePipe } from '@angular/common';\n\n\n@Component({\n  selector: 'app-add-task',\n  templateUrl: './add-task.component.html',\n  styleUrls: ['./add-task.component.css']\n})\n\nexport class AddTaskComponent implements OnInit {\nuserData: UserData = {FirstName:'',UserID: null,LastName:'',EmployeeID:'' }\nusers: UserData[];\n\nprojectData: ProjectData = {     ProjectID: null,\n    UserID: null,\n    TaskID: null,\n    ProjectName:  '',\n    StartDate: '',\n    EndDate: '',\n     Priority: null}\nprojects: ProjectData[];\n  // Task Model Sample\n  task: TaskData = {\n    TaskID: null,\n    UserID: null,\n    ProjectID: null,\n    TaskName: '',\n    ParentID: null,\n    ParentName: '',\n    StartDate: '',\n    EndDate: '',\n    Priority: null,\n    ParentTaskName: '',\n    IsCompleted: false,\n\n  }\n  test: TaskData;\n\n  // Array of Task Model Sample\n  tasks: TaskData[];\n\n  //Additional\n  isEdit: boolean;\n  FormRequestType: string;\n  param_tsk_id: number;\n  constructor(private userService: UserService,private projectService: ProjectService,private taskService: TaskService, private router: Router, private datePipe: DatePipe, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n   \n    console.log(\"Verifying if URL contains params\");\n    this.param_tsk_id = +this.route.snapshot.params['id'];\n\n    if (this.param_tsk_id) {\n      console.log(\"param_tsk_id\");\n      console.log(this.param_tsk_id);\n      this.isEdit = true;\n      this.task.TaskID = this.param_tsk_id;\n    }\n    \n    if (!this.isEdit) {\n      this.FormRequestType = \"Add\";\n    } else {\n      this.FormRequestType = \"Update\";\n\n      this.taskService.getTask(this.param_tsk_id)\n        .subscribe(taskresp => {\n          this.task.TaskID = taskresp[0].TaskID;\n          this.task.TaskName = taskresp[0].TaskName;\n          this.task.Priority = taskresp[0].Priority;\n          this.task.ParentID= taskresp[0].ParentID;\n          this.task.StartDate = this.datePipe.transform(taskresp[0].StartDate, \"yyyy-MM-dd\");\n          this.task.EndDate =  this.datePipe.transform(taskresp[0].EndDate, \"yyyy-MM-dd\");    \n         \n \n          //this.isEdit = true;\n \n          console.log(\"this.task\");\n          console.log( taskresp[0]);\n        })        \n    }\n\n\n    this.taskService.getTasks()\n      .subscribe(\n        (response: TaskData[]) => {\n          this.tasks = response;\n           console.log(\"project response in consolee\");\n           console.log(this.tasks);\n        }\n      );\n\n      this.userService.getUsers()\n      .subscribe(\n        (userresponse: UserData[]) => {\n          this.users = userresponse;\n           console.log(\"users response in consolee\");\n           console.log(this.users);\n        }\n      );\n\n      this.projectService.getProjects()\n      .subscribe(\n        (projectresponse: ProjectData[]) => {\n          this.projects = projectresponse;\n         \n        }\n      );\n  }\n\n  TaskID(){\n    return this.task.ParentID;\n  }\n  submit(form: FormGroup) {\n    const request = form.value;\n    /* request.StartDate = this.datePipe.transform(request.StartDate, \"dd-MM-yyyy\");\n    request.EndDate = this.datePipe.transform(request.EndDate, \"dd-MM-yyyy\");\n*/\n \n    console.log(\"form value from   submit(form: FormGroup)\");\n    console.log(request);\n    if (!this.isEdit) {\n      ;\n      this.taskService.addTask(request)\n        .subscribe(response => {\n          this.tasks.push(response);\n        }, error => {\n          for (const key of Object.keys(error.error.ModelState)) {\n            for (const err of error.error.ModelState[key]) {\n              alert(err);\n            }\n          }\n        }, () => {\n          form.reset();\n        })\n    }else {\n      this.test = form.value;\n      this.test.TaskID = this.param_tsk_id;\n      this.taskService.updateTask(this.param_tsk_id, request)\n        .subscribe(responses => {this.taskService.getTasks()\n      .subscribe(\n      (response: TaskData[]) => {\n        this.tasks = response;\n        console.log(\"task response in consolee\");\n        console.log(this.tasks);\n      },\n          error => {\n            for (const key of Object.keys(error.error.ModelState)) {\n              for (const err of error.error.ModelState[key]) {\n                alert(err);\n              }\n            }\n          },\n          () => {\n            form.reset();\n            this.isEdit = false;\n          })\n           this.router.navigate(['/ViewTask']);\n        })\n    }\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL19jb21wb25lbnRzL2FkZC11c2VyL2FkZC11c2VyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div>\\n  <form #projectForm=\\\"ngForm\\\" (ngSubmit)=\\\"submit(projectForm)\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading\\\">Add User</div>\\n        <div class=\\\"panel-body\\\">\\n          \\n          <div class=\\\"form-group\\\" [class.has-error]=\\\"userFName.touched && userFName.invalid\\\">\\n            <label for=\\\"txtuserFName\\\" class=\\\"control-label\\\">First Name:</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"txtuserFName\\\" name=\\\"FirstName\\\" [(ngModel)]=\\\"userData.FirstName\\\" #userFName=\\\"ngModel\\\" required>\\n            <div *ngIf=\\\"userFName.touched && userFName.invalid\\\">\\n            <span class=\\\"error\\\" *ngIf=\\\"userFName.errors?.required\\\">First Name is required</span>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\" [class.has-error]=\\\"userLName.touched && userLName.invalid\\\">\\n            <label for=\\\"txtuserLName\\\" class=\\\"control-label\\\">Last Name:</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"txtuserLName\\\" name=\\\"LastName\\\" [(ngModel)]=\\\"userData.LastName\\\" #userLName=\\\"ngModel\\\" required >\\n            <div *ngIf=\\\"userLName.touched && userLName.invalid\\\">\\n            <span class=\\\"error\\\" *ngIf=\\\"userLName.errors?.required\\\">Last Name is required</span>\\n            </div>\\n          </div>\\n        <div class=\\\"form-group\\\" [class.has-error]=\\\"userEmpID.touched && userEmpID.invalid\\\">\\n            <label for=\\\"txtuserEmpID\\\" class=\\\"control-label\\\">Employee ID:</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"txtuserEmpID\\\" name=\\\"EmployeeID\\\" [(ngModel)]=\\\"userData.EmployeeID\\\"\\n               #userEmpID=\\\"ngModel\\\" required>\\n                <div *ngIf=\\\"userEmpID.touched && userEmpID.invalid\\\">\\n            <span class=\\\"error\\\" *ngIf=\\\"userEmpID.errors?.required\\\">Employee ID is required</span>\\n            </div>\\n          </div>\\n        <div class=\\\"panel-footer\\\">\\n          <div class=\\\"pull-right\\\">\\n            <button class=\\\"btn btn-md btn-primary\\\" >{{FormRequestType}} User</button>\\n            &nbsp;\\n            <button type=\\\"reset\\\" class=\\\"btn btn-success\\\">Reset</button>\\n          </div>\\n          <div class=\\\"clearfix\\\"></div>\\n        </div>\\n         </div>\\n         </div>\\n         </div>\\n  </form>\\n\\n  <table class=\\\"table table-striped table-hover table-bordered\\\">\\n   \\n    <thead>\\n      <tr>\\n         <th (click)=\\\"sort('name')\\\">First Name\\n         <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='name'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span></th>\\n          <th (click)=\\\"sort('name')\\\">Last Name\\n         <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='name'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span></th>\\n          <th (click)=\\\"sort('name')\\\">Employee ID\\n         <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='name'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span></th>\\n          <th colspan=\\\"2\\\"><b>\\n            Search First Name:\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"FirstName\\\"  style=\\\"box-sizing:border-box;display:block;width:100%;background-color: lightgrey\\\">\\n            </b></th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let userr of users \\\">\\n         <td>{{userr.FirstName}}</td>\\n        <td>{{userr.LastName}}</td>\\n         <td>{{userr.EmployeeID}}</td>\\n        <td colspan=\\\"2\\\">\\n          <button class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"edit(userr.UserID)\\\">\\n            <span class=\\\"glyphicon glyphicon-pencil\\\">&nbsp;Edit</span>\\n          </button>\\n          &nbsp;&nbsp;&nbsp;\\n          <button class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"delete(userr.UserID)\\\">\\n            <span class=\\\"glyphicon glyphicon-trash\\\">&nbsp;Delete</span>\\n          </button>\\n         \\n          \\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ProjectService } from './../../_services/project.service';\nimport { FormGroup } from '@angular/forms';\nimport { formatDate } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { TestBed } from '@angular/core/testing';\nimport { ViewTaskComponent } from '../../_components/view-task/view-task.component'\nimport { TaskData } from './../../_models/task-data.model';\nimport { UserData } from './../../_models/user-data.model';\nimport { DatePipe } from '@angular/common';\nimport { UserService } from './../../_services/user.service';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\nexport class AddUserComponent implements OnInit {\n   // User Data\n key: string = 'name'; //set default\n reverse: boolean = false;\n\n sort(key){\n    this.key = key;\n    this.reverse = !this.reverse;\n  }\n  updateuserreq: UserData;\n  users: UserData[];\n  isEdit: boolean;\n  userId: number;\n  userData: UserData = {FirstName:'',UserID: null,LastName:'',EmployeeID:'' }\n  FormRequestType: string=\"\";\n\n  constructor(private userService: UserService, private router: Router) { }\n\n  ngOnInit() {\n    this.FormRequestType=\"Add\";\n    this.userService.getUsers()\n      .subscribe(response => {\n        this.users = response;\n        console.log( this.users)\n      })\n  }\n\n  submit(form: FormGroup) {\n    const request = form.value;\n\n    if (!this.isEdit) {\n      this.userService.addUser(request)\n        .subscribe(response => {\n          this.users.push(response);\n        }, error => {\n          for (const key of Object.keys(error.error.ModelState)) {\n            for (const err of error.error.ModelState[key]) {\n              alert(err);\n            }\n          }\n        }, () => {\n          form.reset();\n         \n        })\n    } else {\n     \n     this.updateuserreq=request;\n     this.updateuserreq.UserID=this.userId;\n\n       console.log(\"Inside update\");\n       console.log(this.updateuserreq);\n      this.userService.updateUser(this.userId, this.updateuserreq)\n        /* working\n        .subscribe(project => {\n          var projIndex = this.projects.findIndex(proj => proj.UserID == this.projectId);\n          console.log(\"projIndex\");\n          console.log(projIndex);\n\n          if (projIndex != -1) {\n           this.userService.getUsers()\n      .subscribe(response => {\n        this.projects = response;\n        console.log( this.projects)\n      })\n          }\n          */\n          .subscribe(project => {\n           this.userService.getUsers()\n      .subscribe(response => {\n        this.users = response;\n         console.log( this.users)\n           this.FormRequestType=\"Submit\";\n      })\n          }\n        , error => {\n          for (const key of Object.keys(error.error.ModelState)) {\n            for (const err of error.error.ModelState[key]) {\n              alert(err);\n            }\n          }\n        }, () => {\n          form.reset();\n          this.isEdit = false;\n        })\n    }\n  }\n\n  delete(id: number) {\n    let isDelete = confirm('Do you wish to delete the User?')\n    if (isDelete) {\n      this.userService.deleteUser(id)\n        .subscribe(response => {\n          if (response) {\n            const projIndex = this.users.findIndex(proj => proj.UserID == id);\n            if (projIndex != -1) {\n              console.log(\"spliced\")\n              this.users.splice(projIndex, 1);\n            }\n          }\n        });\n    }\n  }\n\n  edit(id: number) {\n     this.FormRequestType=\"Update\";\n    console.log(\"edit id\")\n     console.log(id)\n    this.userService.getUser(id)\n      .subscribe(user => {\n        this.userData.FirstName = user.FirstName;\n        this.userData.LastName = user.LastName;\n         this.userData.EmployeeID = user.EmployeeID;\n        this.isEdit = true;\n        this.userId = id;\n      })\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL19jb21wb25lbnRzL25hdi9uYXYuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<nav class=\\\"navbar navbar-inverse navbar-fixed\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <!-- Brand and toggle get grouped for better mobile display\\n    <div class=\\\"navbar-header\\\">\\n      <a class=\\\"navbar-brand\\\"[routerLink]=\\\"['/']\\\">Task Manager</a>\\n    </div>\\n -->\\n    <!-- Collect the nav links, forms, and other content for toggling -->\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n         <li routerLinkActive=\\\"active\\\"><a [routerLink]=\\\"['/AddProject']\\\">Add Project</a></li>\\n        <li routerLinkActive=\\\"active\\\"><a [routerLink]=\\\"['/AddTask']\\\">Add Task</a></li>\\n        \\n          <li routerLinkActive=\\\"active\\\"><a [routerLink]=\\\"['/AddUser']\\\">Add User</a></li>\\n          <li routerLinkActive=\\\"active\\\"><a [routerLink]=\\\"['/ViewTask']\\\">View Task</a></li>\\n         <!--<li routerLinkActive=\\\"active\\\"><a [routerLink]=\\\"['/testTask']\\\">Test Task</a></li>-->\\n        </ul>\\n    </div><!-- /.navbar-collapse -->\\n  </div><!-- /.container-fluid -->\\n</nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".disabled{\\n cursor: not-allowed;\\n background-color: lightgray\\n}\\n\\nthead>tr>th {\\n    cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvX2NvbXBvbmVudHMvdmlldy10YXNrL3ZpZXctdGFzay5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0Msb0JBQW9CO0NBQ3BCLDJCQUEyQjtDQUMzQjs7QUFFRDtJQUNJLGdCQUFnQjtDQUNuQiIsImZpbGUiOiJzcmMvYXBwL19jb21wb25lbnRzL3ZpZXctdGFzay92aWV3LXRhc2suY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kaXNhYmxlZHtcbiBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JheVxufVxuXG50aGVhZD50cj50aCB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufSJdfQ== */\"","module.exports = \"\\n<table class=\\\"table table-striped table-hover table-bordered\\\">\\n    <tr>\\n      <td>Task:</td>\\n      <td colspan=\\\"3\\\"><input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"TaskName\\\" style=\\\"box-sizing:border-box;display:block;width:100%;background-color: lightgrey\\\"></td>\\n      <td>Parent Task:</td>\\n      <td colspan=\\\"3\\\"> <input type=\\\"text\\\" style=\\\"box-sizing:border-box;display:block;width:100%;background-color: lightgrey\\\"   name=\\\"ParentTaskName\\\" ></td>\\n    </tr>\\n    <tr>\\n      <td>Priority From:</td>\\n      <td> <input type=\\\"text\\\" style=\\\"background-color: lightgrey\\\"  name=\\\"Priority\\\" ></td>\\n      <td>Priority To:</td>\\n      <td> <input type=\\\"text\\\"  style=\\\"background-color: lightgrey\\\" name=\\\"Priority\\\" ></td>\\n       <td>Start Date:</td>\\n      <input class=\\\"form-control\\\"  type=\\\"date\\\" value=\\\"\\\" style=\\\"background-color: lightgrey\\\"  name=\\\"StartDate\\\" >\\n      <td>End Date:</td>\\n      <input class=\\\"form-control\\\"  type=\\\"date\\\" value=\\\"\\\" style=\\\"background-color: lightgrey\\\" name=\\\"EndDate\\\">\\n    </tr>\\n    <tr>\\n      <td colspan=\\\"8\\\"> <button class=\\\"btn btn-sm btn-primary\\\">Clear</button></td>\\n    </tr>\\n  </table>\\n  <hr >\\n  <table class=\\\"table table-striped table-hover table-bordered\\\">\\n     <thead> \\n      <tr>\\n         <th (click)=\\\"sort('name')\\\">TaskName\\n         <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='name'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span></th>\\n          <th (click)=\\\"sort('name')\\\">Parent\\n         <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='name'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span></th>\\n          <th (click)=\\\"sort('name')\\\">Priority\\n         <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='name'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span></th>\\n          <th (click)=\\\"sort('name')\\\">Start\\n         <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='name'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span></th>\\n          <th (click)=\\\"sort('name')\\\">End\\n         <span class=\\\"glyphicon sort-icon\\\" *ngIf=\\\"key =='name'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span></th>\\n          <th colspan=\\\"2\\\"><b>Actions</b></th>\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr *ngFor=\\\"let task of tasks; let i = index\\\" [attr.data-index]=\\\"i\\\">\\n        <td  [ngClass]=\\\"{'disabled': task.IsCompleted}\\\">{{task.TaskName}}</td>\\n        <td  [ngClass]=\\\"{'disabled': task.IsCompleted}\\\">{{task.ParentTaskName}}</td>\\n        <td [ngClass]=\\\"{'disabled': task.IsCompleted}\\\">{{task.Priority}}</td>\\n        <td [ngClass]=\\\"{'disabled': task.IsCompleted}\\\">{{task.StartDate | date:'dd/MM/yyyy'}}</td>\\n        <td [ngClass]=\\\"{'disabled': task.IsCompleted}\\\">{{task.EndDate | date:'dd/MM/yyyy'}}</td>\\n        <td [ngClass]=\\\"{'disabled': task.IsCompleted}\\\">{{task.IsCompleted}}</td>\\n        <td [ngClass]=\\\"{'disabled': task.IsCompleted}\\\">\\n          <button class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"edit(task.TaskID)\\\" [disabled]=\\\"task.IsCompleted\\\">\\n          Edit\\n          </button> &nbsp;&nbsp;&nbsp;\\n          <button class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"delete(task.TaskID)\\\" [disabled]=\\\"task.IsCompleted\\\">\\n           End Task\\n          </button> &nbsp;&nbsp;&nbsp;\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n\\n\"","import { Component, OnInit, NgProbeToken } from '@angular/core';\nimport { ProjectService } from 'src/app/_services/project.service';\nimport { Form, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TaskData } from './../../_models/task-data.model';\nimport { DatePipe } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { TaskService } from './../../_services/task.service';\nimport { map, filter, scan } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-view-task',\n  templateUrl: './view-task.component.html',\n  styleUrls: ['./view-task.component.css']\n})\n\nexport class ViewTaskComponent implements OnInit {\n  tasks: TaskData[];\n    key: string = 'name'; //set default\n  reverse: boolean = false;\n\n  isEdit: boolean;\n   rerender = false;  \n\n  constructor(private route: ActivatedRoute,private taskService: TaskService,private projectService: ProjectService, private router: Router) { \n    \n  }\n  sort(key){\n    this.key = key;\n    this.reverse = !this.reverse;\n  }\n  \n  ngOnInit() {\n     let TaskID: number = +this.route.snapshot.params['id'];\n    this.taskService.getTasks()\n      .subscribe(\n      (response: TaskData[]) => {\n        this.tasks = response;\n        console.log(\"task response in consolee\");\n        console.log(this.tasks);\n      }\n      );\n  }\n\n  \n\n  edit(TaskID: number) {\n    //this.router.navigate(['/projects', id]);\n    this.router.navigate(['/EditTask',TaskID]);\n  }\n\n   delete(TaskID: number) {\n   let isDelete = confirm('Do you wish to delete the Task?')\n\n    if (isDelete) {\n      this.taskService.deleteTask(TaskID)\n        .subscribe(project => {\n           this.taskService.getTasks()\n      .subscribe(response => {\n         this.tasks = response;\n        //console.log( this.projects)\n      })\n          }\n        );\n          \n    }\n    \n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Observable } from 'rxjs';\nimport { TestBed } from '@angular/core/testing';\nimport { TaskData } from '../_models/task-data.model';\nimport { UserData } from '../_models/user-data.model';\nimport { ProjectData } from '../_models/project-data.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n  private apiUrl: string = 'http://localhost:5005/api/Project';\n\n  constructor(private http: HttpClient) { }\n\n  \n  \n  \n getProjects(): Observable<ProjectData[]>{\n    return this.http.get<ProjectData[]>(this.apiUrl);\n  }\n  //\n\n  //Add Project\n  addProject(request: any): Observable<ProjectData> {\n    return this.http.post<ProjectData>(this.apiUrl, request);\n  }\n  //get Project\ngetProject(id: number): Observable<ProjectData> {\n    return this.http.get<ProjectData>(this.apiUrl + '/' + id);\n  }\n\n  //update Project\n  updateProject(id: number, request: any): Observable<ProjectData> {\n    return this.http.put<ProjectData>(this.apiUrl + '/' + id, request);\n  }\n  \n\n  deleteProject(id: number): Observable<boolean> {\n    return this.http.delete<boolean>(this.apiUrl + '/' + id);\n  }\n \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Observable } from 'rxjs';\nimport { TestBed } from '@angular/core/testing';\nimport { TaskData } from '../_models/task-data.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n  private apiUrl: string = 'http://localhost:5005/api/Task';\n\n  constructor(private http: HttpClient) { }\n\n getTasks(): Observable<TaskData[]>{\n    return this.http.get<TaskData[]>(this.apiUrl);\n  }\n  //\n\n  //Add Test\n  addTask(request: any): Observable<TaskData> {\n    return this.http.post<TaskData>(this.apiUrl, request);\n  }\n  //get task\ngetTask(id: number): Observable<TaskData> {\n    return this.http.get<TaskData>(this.apiUrl + '/' + id);\n  }\n\n  //update task\n  updateTask(id: number, request: any): Observable<TaskData> {\n    return this.http.put<TaskData>(this.apiUrl + '/' + id, request);\n  }\n  \n\n  deleteTask(id: number): Observable<boolean> {\n    return this.http.delete<boolean>(this.apiUrl + '/' + id);\n  }\n\n \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Observable } from 'rxjs';\nimport { TestBed } from '@angular/core/testing';\nimport { TaskData } from '../_models/task-data.model';\nimport { UserData } from '../_models/user-data.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private apiUrl: string = 'http://localhost:5005/api/User';\n\n  constructor(private http: HttpClient) { }\n\n  \n  \n  \n getUsers(): Observable<UserData[]>{\n    return this.http.get<UserData[]>(this.apiUrl);\n  }\n  //\n\n  //Add Users\n  addUser(request: any): Observable<UserData> {\n    return this.http.post<UserData>(this.apiUrl, request);\n  }\n  //get User\ngetUser(id: number): Observable<UserData> {\n    return this.http.get<UserData>(this.apiUrl + '/' + id);\n  }\n\n  //update User\n  updateUser(id: number, request: any): Observable<UserData> {\n    return this.http.put<UserData>(this.apiUrl + '/' + id, request);\n  }\n  \n\n  deleteUser(id: number): Observable<boolean> {\n    return this.http.delete<boolean>(this.apiUrl + '/' + id);\n  }\n \n}\n","module.exports = \".disabled{\\n cursor: not-allowed;\\n background-color: lightgray\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxvQkFBb0I7Q0FDcEIsMkJBQTJCO0NBQzNCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGlzYWJsZWR7XG4gY3Vyc29yOiBub3QtYWxsb3dlZDtcbiBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXlcbn0iXX0= */\"","module.exports = \"<h1 style=\\\"text-align: center;font-size: 20px; \\\">Task Manager</h1>\\n<app-nav></app-nav>\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'TaskManager';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule,CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { FormsModule } from '@angular/forms'\nimport { HttpClientModule } from '@angular/common/http'\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './_components/nav/nav.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AddTaskComponent } from './_components/add-task/add-task.component';\nimport { ViewTaskComponent } from './_components/view-task/view-task.component'\nimport {DatePipe} from '@angular/common';\nimport { Ng2OrderModule } from 'ng2-order-pipe'; //importing the module\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport { AddUserComponent } from './_components/add-user/add-user.component';\nimport { AddProjectComponent } from './_components/add-project/add-project.component'; // <-- import the module\n\nconst routes: Routes = [\n\n  { path: '', component: ViewTaskComponent },\n  { path: 'ViewTask', component: ViewTaskComponent },\n  { path: 'AddTask', component: AddTaskComponent },\n  { path: 'EditTask/:id', component: AddTaskComponent },\n   { path: 'AddUser', component: AddUserComponent },\n    { path: 'AddProject', component: AddProjectComponent }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    AddTaskComponent,\n    ViewTaskComponent,\n    AddUserComponent,\n    AddProjectComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'}),\n    Ng2SearchPipeModule ,\n     Ng2OrderModule, //add here\n     NgxPaginationModule\n  ],\n  providers: [ DatePipe],\n  bootstrap: [AppComponent],\n   schemas: [ CUSTOM_ELEMENTS_SCHEMA ]\n   ,\n   exports:[NavComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}